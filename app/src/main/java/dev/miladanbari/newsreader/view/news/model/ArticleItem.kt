package dev.miladanbari.newsreader.view.news.model

import android.os.Parcelable
import androidx.annotation.StringRes
import dev.miladanbari.newsreader.R
import kotlinx.parcelize.Parcelize
import kotlinx.serialization.Serializable

/**
 * This class represents an article item in the news feed. Also, it is used as a navigation argument.
 * ArticleArgument class is omitted due to reduce code complexity and time limitation.
 */
@Parcelize
@Serializable
data class ArticleItem(
    val source: SourceItem,
    val author: String?,
    val title: String,
    val description: String,
    val url: String,
    val urlToImage: String?,
    val formattedPublishedDateTime: String,
    val content: String,
    // This ID is defined for the purposes of the LazyColumn and should be unique for each item.
    // It can be replaced by a ID which is generated by the server.
    val id: Long = System.nanoTime(),
) : Parcelable

@Parcelize
@Serializable
data class SourceItem(
    val id: String?,
    val name: String,
) : Parcelable

data class FilterAndSort(val searchQuery: String, val sort: NewsSort)

enum class NewsSort(@StringRes val titleResId: Int, val value: String) {
    RELEVANCE(titleResId = R.string.title_sort_relevance, value = "relevancy"),
    POPULARITY(titleResId = R.string.title_sort_popular, value = "popularity"),
    NEWEST(titleResId = R.string.title_sort_newest, value = "publishedAt"),
}
